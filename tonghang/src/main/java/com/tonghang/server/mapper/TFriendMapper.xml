<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tonghang.server.mapper.TFriendMapper" >
  <resultMap id="BaseResultMap" type="com.tonghang.server.entity.TFriend" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="fid" property="fid" jdbcType="INTEGER" />
    <result column="confirm" property="confirm" jdbcType="INTEGER" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_friend
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tonghang.server.entity.TFriend" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_friend (id, pid, fid, 
      confirm)
    values (#{id,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, #{fid,jdbcType=INTEGER}, 
      #{confirm,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.tonghang.server.entity.TFriend" >
    update t_friend
    set pid = #{pid,jdbcType=INTEGER},
      fid = #{fid,jdbcType=INTEGER},
      confirm = #{confirm,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, pid, fid, confirm
    from t_friend
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, pid, fid, confirm
    from t_friend
  </select>
  <select  id="isFriends"  resultMap="BaseResultMap"   parameterType="integer" >
  	select id,pid,fid, confirm 
  	from  t_friend  where  (pid =#{userId}  and fid =#{targetUserId} and confirm = 1) 
  	 or (fid =#{userId}  and pid =#{targetUserId} and confirm = 1)  limit 1
  </select>
  <select id="selectAllFriendsId"  resultType="integer"  parameterType="integer">
  select pid  as id  from t_friend  where fid =#{userId}  and confirm =1 
  union select fid as id  from t_friend where pid =#{userId}  and confirm =1 
  
  </select>
  
  <select  id="friendNotConfirm"  resultMap="BaseResultMap"   parameterType="integer" >
  	select id,pid,fid, confirm 
  	from  t_friend  where  (fid =#{userId}  and pid =#{targetUserId} and confirm = 0 )  limit 1
  </select>
  
  <select  id="selectApplyNotConfirm"  resultMap="BaseResultMap"   parameterType="integer" >
  	select id,pid,fid, confirm 
  	from  t_friend  where  (pid =#{userId}   and  confirm = 0 )  
  </select>
  
  <select  id="selectBeenApplyNotConfirm"  resultMap="BaseResultMap"   parameterType="integer" >
  	select id,pid,fid, confirm 
  	from  t_friend  where  (fid =#{userId}   and  confirm = 0 )  
  </select>
   <select  id="isApplyFriends"  resultMap="BaseResultMap"   parameterType="integer" >
  	select id,pid,fid, confirm 
  	from  t_friend  where  (pid =#{userId}  and fid =#{targetUserId} ) 
  	 or (fid =#{userId}  and pid =#{targetUserId})  limit 1
  </select>
</mapper>